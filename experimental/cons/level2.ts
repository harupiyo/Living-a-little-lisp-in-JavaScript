/*
level1.js „ÅßÊòé„Çâ„Åã„Å´„Å™„Å£„ÅüÂïèÈ°å„ÇíËß£Ê±∫„Åô„Çã

‰ª•‰∏ãÂºïÁî®:
	PART I:
		let c3 = new Cons(1,2);
		c3.cdr = c3.car;				// cdr „Å®car „ÅåÂêå„Åò„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆÂèÇÁÖß„ÇíÊåá„Åó„Å¶„ÅÑ„Çã„ÅÆ„Åß
		console.log(c3);
		c3.car.val = "it changed";		// „Å©„Å°„Çâ„Åã„ÇíÂ§â„Åà„Çå„Å∞
		console.log(c3);				// ‰∏°ÊñπÂ§â„Çè„Çã

		Cons {
		  car: Value { tag: "TODO", val: "it changed" },
		  cdr: Value { tag: "TODO", val: "it changed" }
		}
		„Åß„Åç„Å¶„ÅÑ„Çã„Å≠

	PART II:
		Lisp „ÅØÈÅï„ÅÜÂãï„Åç„Çí„Åó„Å¶„ÅÑ„ÇãüòÅ
			CL-USER(2): (defparameter a 1)
			A
			CL-USER(3): (defparameter b 2)
			B
			CL-USER(4): (defparameter c (cons a b))
			C
			CL-USER(5): (rplacd c (car c))
			(1 . 1)
			CL-USER(6): (setq a 3)
			3
			CL-USER(7): c
			(1 . 2)

		(cons a b) „ÇíË©ï‰æ°„Åô„ÇãÈöõ„Å´„ÄÅ„É™„Éº„ÉÄ„Éº„Åå„Ç∑„É≥„Éú„É´„ÇíË©ï‰æ°„ÅóÂÄ§„Å´ÁΩÆ„ÅçÊèõ„Åà„Å¶
		(cons 1 2) „Å´„Åó„ÅüÁä∂ÊÖã„ÅßEVAL „Å´Ê∏°„Åô„Åã„Çâ„ÄÅcons „Å´„Ç∑„É≥„Éú„É´„ÇíÊ†ºÁ¥ç„Åó„Å¶„ÅÑ„Çã„Çè„Åë„Åò„ÇÉ„Å™„ÅÑ„ÄÇ
		„Åó„Åü„Åå„Å£„Å¶6Ë°åÁõÆ„Åß„Ç∑„É≥„Éú„É´a „Å´Êñ∞„Åó„ÅÑÂÄ§„ÇíÂâ≤„ÇäÂΩì„Å¶„Å¶„ÇÇcons „Å´„ÅØ„Å™„Çì„ÅÆÈñ¢‰øÇ„ÇÇ„Å™„ÅÑ„ÄÇ

		Ê¨°„Å´„Åì„ÅÆ„Çà„ÅÜ„Å´„Åó„Å¶„Åø„Çã„Å®
			CL-USER(7): c
			(1 . 2)
			CL-USER(11): (rplacd c (car c))
			(1 . 1)
			CL-USER(12): (rplaca c 3)
			(3 . 1)
		car ÈÉ®(1 „Çí„Åï„Åô)„ÅØÁ¢∫„Åã„Å´„Éù„Ç§„É≥„Çø„Éº„Å†„Åå„ÄÅrplaca „ÅßÊñ∞„Åó„ÅÑÂÄ§3 „Å´Êõ∏„ÅçÊèõ„Åà„ÇãÈöõ„ÄÅÊñ∞„Åó„ÅÑÂÄ§3„Çí‰Ωú„Å£„Å¶„Åù„ÅÆ„Éù„Ç§„É≥„Çø„Éº„Å´Â∑Æ„ÅóÊõø„Åà„Çã„Çè„Åë„Å†„Åã„Çâ„ÄÅ1„ÅÆ‰∏≠Ë∫´„Çí„ÅÑ„Åò„Å£„Å¶„ÅÑ„Çã„Çè„Åë„Åò„ÇÉ„Å™„ÅÑ„ÄÇ

		„Åì„ÅÜ„Åô„Çã„Å®Âàù„ÇÅ„Å¶Âæ™Áí∞ÂèÇÁÖß„Å´„Å™„Çã„ÄÇ
			CL-USER(13): (rplacd c c)
			3 3 3 3 3 3 ...^c

		„Å™„Çã„Åª„Å©„ÄÇ

		„Åì„ÅÆÈÉ®ÂàÜ„ÇíËÄÉ„Åà„Å™„ÅÑ„Å®„ÅÑ„Åë„Å™„ÅÑ„ÄÇ

Êîπ„ÇÅ„Å¶ËÄÉ„Åà„Çã„Å´„ÄÅ
	"car ÈÉ®(1 „Çí„Åï„Åô)„ÅØÁ¢∫„Åã„Å´„Éù„Ç§„É≥„Çø„Éº„Å†„Åå„ÄÅrplaca „ÅßÊñ∞„Åó„ÅÑÂÄ§3 „Å´Êõ∏„ÅçÊèõ„Åà„ÇãÈöõ„ÄÅÊñ∞„Åó„ÅÑÂÄ§3„Çí‰Ωú„Å£„Å¶„Åù„ÅÆ„Éù„Ç§„É≥„Çø„Éº„Å´Â∑Æ„ÅóÊõø„Åà„Çã„Çè„Åë„Å†„Åã„Çâ„ÄÅÂÄ§1„ÅÆ‰∏≠Ë∫´„Çí„ÅÑ„Åò„Å£„Å¶„ÅÑ„Çã„Çè„Åë„Åò„ÇÉ„Å™„ÅÑ„ÄÇ"
„ÅØÊ≠£„Åó„Åè„ÄÅ„Åì„ÅÆÂ†¥Âêàrplaca/rplacd „ÅÆÊìç‰Ωú„Å´„Çà„Å£„Å¶ÂèÇÁÖß„Åï„Çå„Å™„Åè„Å™„Å£„ÅüÂÄ§„ÅØCG ÂõûÂèé„ÅÆÂØæË±°„Å´„Å™„Çã„Å†„Çç„ÅÜ„ÄÇ
ÂÄ§1 „ÅÆ„Éù„Ç§„É≥„Çø„Éº„ÇíÈôΩ„Å´Êâ±„Åà„Å™„ÅÑ„Åü„ÇÅ„ÄÅÂÄ§Ôºë„ÅÆ„Éù„Ç§„É≥„Çø„Éº„ÅÆÂÖà„ÄÅÂÄ§„Åù„ÅÆ„ÇÇ„ÅÆ„Çí‰øÆÊ≠£„Åô„ÇãÊâãÊÆµ„Åå„Å™„ÅÑ„ÄÇ
„Å†„Åã„ÇâLisp „ÅÆÂÄ§„ÅØJavaScript „Åß„ÅÑ„ÅÜconst „Å†„ÄÇ

„Çà„Å£„Å¶PART IÈÉ®„Å®PART IIÈÉ®„ÅÆËÄÉÂØü„ÅØÁüõÁõæ„Åó„Å¶„Åä„Çâ„Åö„ÄÅ„Å©„Å°„Çâ„ÇÇÊ≠£„Åó„ÅÑ„ÄÇ
„Åù„Åó„Å¶PART IÈÉ®„Åß„ÅØÈôΩ„Å´"ÂÄ§„ÅÆÂèÇÁÖß"„Çí‰ª£ÂÖ•„Åó„Åü„Åå„ÄÅLisp „Åß„ÅØ„Åù„ÅÆ„Çà„ÅÜ„Å™„Åì„Å®„ÅØ„Åß„Åç„Å™„ÅÑ„ÄÇ
„Åß„Åç„Çã„Å®„Åó„Åü„ÇâCons „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆÂèÇÁÖß„ÇíÊâ±„ÅÜ
	CL-USER(13): (rplacd c c)
	3 3 3 3 3 3 ...^C
„Å®„ÅÑ„ÅÜÂ†¥Âêà„Å†„ÄÇ

ÁµêË´ñ:
	level1.js „ÅßÁñëÂïèË¶ñ„Åó„Åü„Åì„ÅÆË©±È°å„ÅØLisp„Åß„ÅØ„ÅÇ„Çä„Åà„Å™„ÅÑ„Ç±„Éº„Çπ„Çí„ÉÜ„Çπ„Éà„Åó„Åü„Åã„Çâ„ÅÑ„Åë„Å™„ÅÑ„ÅÆ„Åß„ÅÇ„Å£„Å¶„ÄÅCons ÂÆüË£Ö„ÅÆÊ¨†ÁÇπ„Åå„ÅÇ„Å∂„ÇäÂá∫„Åï„Çå„Åü„Çè„Åë„Åß„ÅØ„Å™„Åã„Å£„Åü„ÄÇ

*/

import { Value } from "../value/level2.js"
import { LSymbol } from '../symbol/level2.ts'

declare type atom = string | number | LSymbol | Value | null	// null as NIL
declare type s_expr = atom | Cons
export type cons_pointer = s_expr

export class Cons {
	car: cons_pointer
	cdr: cons_pointer
	constructor(car:cons_pointer,cdr:cons_pointer){
		this.car = car
		this.cdr = cdr
	}
}

/*
let c1 = new Cons( new Value("INT", 1), new Value("INT", 2) );
console.log(c1);

let c2 = new Cons(
	new Cons(new Value("INT", 1), new Value("INT", 2)),
	new Cons(new Value("INT", 3), new Value("INT", 4)));
console.log(c2);

// Â∑°Âõû„É™„Çπ„Éà
let c4 = new Cons( new Value("INT", 1), new Value("INT", 2) );
c4.cdr = c4;
console.log(c4)
// => Cons { car: Value { tag: { type: "INT", constant: false }, val: 1 }, cdr: [Circular] }
// „Åß„Åç„Å¶„ÅÑ„Çã„Å≠
*/
